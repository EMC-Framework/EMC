plugins {
	id 'fabric-loom' version '0.7-SNAPSHOT'
	id "io.freefair.lombok" version "6.0.0-m2"
	id 'maven-publish'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

def getVersionFromJava() {
	def ver = 0.0, patch = 0
	def versionClass = file("src/main/java/me/deftware/client/framework/FrameworkConstants.java").text
	(versionClass =~ ~/double\s+([_a-zA-Z\u0024][_a-zA-Z0-9\u0024]*)\s+=\s+(([0-9]+)\.([0-9]+))/).each {
		ver = it[2]
	}
	(versionClass =~ ~/int\s+([_a-zA-Z$][_a-zA-Z0-9$]*)\s+=\s+([0-9]+)/).each {
		if (it[1].toString() == "PATCH") {
			patch = it[2]
		}
	}
	return "${ver}.${patch}".toString()
}

version = getVersionFromJava()

repositories {
	mavenCentral()
	maven { url = 'https://jitpack.io' }
	maven { url = 'https://maven.fabricmc.net' }
	maven { url = 'https://gitlab.com/EMC-Framework/maven/raw/master/' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraftVersion}"
	mappings "net.fabricmc:yarn:${project.minecraftVersion}${project.mappingsVer}:v2"

	modImplementation "net.fabricmc:fabric-loader:0.11.7"
	modImplementation 'com.github.Chocohead:Fabric-ASM:v2.2'

	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	implementation files("deps/mocked.jar")

	include 'com.github.Chocohead:Fabric-ASM:v2.2'
}

sourceSets {

	mock {
		compileClasspath += main.compileClasspath
	}

}

task mockJar(type: Jar) {
	archiveFileName = "mocked.jar"
	from sourceSets.mock.output
}

minecraft {
	refmapName = 'mixins.emc.refmap.json'
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId 'me.deftware'
			artifactId "EMC-F-v2"
			version "${version}-${project.minecraftVersion}"
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(GenerateMavenPom).all {
	destination = layout.buildDirectory.file("../maven/me/deftware/EMC-F-v2/${version}-${project.minecraftVersion}/EMC-F-v2-${version}-${project.minecraftVersion}.pom").get().asFile
}

task generateApiDocumentation(type: Javadoc) {
	source = ['src/main/java/me/deftware/client']
	title = "EMC Framework Documentation"
	destinationDir = file("docs")
	failOnError false
}

task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set('sources')
	from sourceSets.main.allSource
}

task copyBuilds(type: Copy) {
	from "$rootDir/build/libs/EMC-${version}.jar"
	into "$rootDir/maven/me/deftware/EMC-F-v2/${version}-${project.minecraftVersion}/"
	rename { String fileName ->
		fileName.replace(version.toString(), "${version}-${project.minecraftVersion}".toString()).replace("EMC", "EMC-F-v2")
	}
	doLast {
		project.ant.checksum(file: "$rootDir/maven/me/deftware/EMC-F-v2/${version}-${project.minecraftVersion}/EMC-F-v2-${version}-${project.minecraftVersion}.jar", algorithm: "sha1", todir: "$rootDir/maven/me/deftware/EMC-F-v2/${version}-${project.minecraftVersion}/")
	}
}

build {
	dependsOn(generatePomFileForMavenJavaPublication)
	finalizedBy(copyBuilds)
}
